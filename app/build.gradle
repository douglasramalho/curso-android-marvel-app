plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'kotlin-parcelize'

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {

    compileSdkVersion 33

    signingConfigs {
        release {
            // Obfuscate this like PRIVATE_KEY
            storeFile file('\\..\\store\\marvel_app_key_store.jks')
            storePassword 'Marvel@123'
            keyAlias 'marvel-app'
            keyPassword 'Marvel@123'
        }
    }

    defaultConfig {
        applicationId "com.example.marvelapp"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "PRIVATE_KEY", apikeyProperties['PRIVATE_KEY'])
        buildConfigField("String", "PUBLIC_KEY", apikeyProperties['PUBLIC_KEY'])
        buildConfigField("String", "BASE_URL", '"https://gateway.marvel.com/v1/public/"')
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            debuggable true
        }
        // pre production
        staging {
            // test obfuscation
            initWith debug
            minifyEnabled true // obfuscation
            applicationIdSuffix '.staging'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro',
                    'proguard-rules-staging.pro' // for debug in obfuscated code

            // verify all libraries that work with obfuscation for proguard rules/.cfg
        }
        release {
            signingConfig signingConfigs.release // To generate/build release build in Android Studio
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility(JavaVersion.VERSION_1_8)
        targetCompatibility(JavaVersion.VERSION_1_8)
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    // AndroidX
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Material design
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation project(path: ':core')
    testImplementation 'junit:junit:4.12'

    // Navigation
    def nav_version = '2.5.2'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // ViewModel and LiveData
    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Retrofit
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // OkHttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Room
    def room_version = "2.4.3"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Paging3
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // Glide
    def glide_version = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Other Libs
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // Unit tests
    testImplementation project(":testing")
    testImplementation "androidx.room:room-testing:$room_version"

    // Instrumentation tests
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}